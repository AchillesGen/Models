(***************************************************************************************************************)
(******                       This is the FeynRules mod-file for the Standard model                       ******)
(******                                                                                                   ******)
(******     Authors: N. Christensen, C. Duhr, B. Fuks                                                     ******)
(******                                                                                                   ******)
(****** Choose whether Feynman gauge is desired.                                                          ******)
(****** If set to False, unitary gauge is assumed.                                                          ****)
(****** Feynman gauge is especially useful for CalcHEP/CompHEP where the calculation is 10-100 times faster. ***)
(****** Feynman gauge is not supported in MadGraph and Sherpa.                                              ****)
(***************************************************************************************************************)

(* ************************** *)
(* *****  Information   ***** *)
(* ************************** *)
M$ModelName = "myPions";

M$Information = {
  Authors      -> {"M&S"}, 
  Version      -> "0.0",
  Date         -> "15/01/2025",
  Institutions -> {"UCI"},
  Emails       -> {"mtoman@uci.edu"}
};

FeynmanGauge = True;


(* ************************** *)
(* *****  Change  log   ***** *)
(* ************************** *)

(* v0.1: Initialize model.                            *)


(* ************************** *)
(* *****  Gauge groups  ***** *)
(* ************************** *)
M$GaugeGroups = {
  U1Y  == { 
    Abelian          -> True,  
    CouplingConstant -> g1, 
    GaugeBoson       -> B, 
    Charge           -> Y
  },
  SU2L == { 
    Abelian           -> False, 
    CouplingConstant  -> g2, 
    GaugeBoson        -> Wi, 
    StructureConstant -> Eps, 
    Representations   -> {Ta,SU2D}, 
    Definitions       -> {Ta[a_,b_,c_]->PauliSigma[a,b,c]/2, FSU2L[i_,j_,k_]:> I Eps[i,j,k]}
  }
};


(* ************************** *)
(* *****    Indices     ***** *)
(* ************************** *)

IndexRange[Index[SU2W      ]] = Unfold[Range[3]]; 
IndexRange[Index[SU2D      ]] = Unfold[Range[2]];
IndexRange[Index[Generation]] = Range[3];
IndexRange[Index[IsoSpin   ]] = Unfold[Range[2]];
IndexRange[Index[IsoVector ]] = Unfold[Range[3]];


IndexStyle[SU2W,       j];
IndexStyle[SU2D,       k];
IndexStyle[Generation, f];
IndexStyle[IsoSpin,    s];
IndexStyle[IsoVector,  v];

(* ************************** *)
(* *** Interaction orders *** *)
(* ***  (as used by mg5)  *** *)
(* ************************** *)

M$InteractionOrderHierarchy = {
  {NUC, 1},
  {QED, 1}
};


(* ************************** *)
(* **** Particle classes **** *)
(* ************************** *)
M$ClassesDescription = {

(* Gauge bosons: physical vector fields *)
  V[1] == { 
    ClassName       -> A, 
    SelfConjugate   -> True,  
    Mass            -> 0,  
    Width           -> 0,  
    ParticleName    -> "a", 
    PDG             -> 22, 
    PropagatorLabel -> "a", 
    PropagatorType  -> W, 
    PropagatorArrow -> None,
    FullName        -> "Photon"
  },
  V[2] == { 
    ClassName       -> Z, 
    SelfConjugate   -> True,
    Mass            -> {MZ, 91.1876},
    Width           -> {WZ, 2.4952},
    ParticleName    -> "Z", 
    PDG             -> 23, 
    PropagatorLabel -> "Z",
    PropagatorType  -> Sine,
    PropagatorArrow -> None,
    FullName        -> "Z"
  },
  V[3] == {
    ClassName        -> W,
    SelfConjugate    -> False,
    Mass             -> {MW, Internal},
    Width            -> {WW, 2.085},
    ParticleName     -> "W+",
    AntiParticleName -> "W-",
    QuantumNumbers   -> {Q -> 1},
    PDG              -> 24, 
    PropagatorLabel  -> "W",
    PropagatorType   -> Sine,
    PropagatorArrow  -> Forward,
    FullName         -> "W"
  },

(* Ghosts: related to physical gauge bosons *)
  U[1] == { 
    ClassName       -> ghA, 
    SelfConjugate   -> False,
    Ghost           -> A,
    QuantumNumbers  -> {GhostNumber -> 1},
    Mass            -> 0,
    Width	    -> 0,
    PropagatorLabel -> "uA",
    PropagatorType  -> GhostDash,
    PropagatorArrow -> Forward
  },
  U[2] == {
    ClassName       -> ghZ,
    SelfConjugate   -> False,
    Ghost           -> Z,
    QuantumNumbers  -> {GhostNumber -> 1},
    Mass            -> {MZ,91.1876},  
    Width	    -> {WZ, 2.4952},
    PropagatorLabel -> "uZ",
    PropagatorType  -> GhostDash,
    PropagatorArrow -> Forward
  },
  U[31] == { 
    ClassName       -> ghWp,
    SelfConjugate   -> False, 
    Ghost           -> W,
    QuantumNumbers  -> {GhostNumber -> 1, Q -> 1},
    Mass            -> {MW,Internal}, 
    Width           -> {WW, 2.085}, 
    PropagatorLabel -> "uWp",
    PropagatorType  -> GhostDash, 
    PropagatorArrow -> Forward
  },
  U[32] == { 
    ClassName       -> ghWm,
    SelfConjugate   -> False, 
    Ghost           -> Wbar,
    QuantumNumbers  -> {GhostNumber -> 1, Q -> -1},
    Mass            -> {MW,Internal}, 
    Width           -> {WW, 2.085},
    PropagatorLabel -> "uWm",
    PropagatorType  -> GhostDash, 
    PropagatorArrow -> Forward
  },

(* Gauge bosons: unphysical vector fields *)
  V[11] == { 
    ClassName     -> B, 
    Unphysical    -> True, 
    SelfConjugate -> True, 
    Definitions   -> { B[mu_] -> cw A[mu] - sw Z[mu]} 
  },
  V[12] == { 
    ClassName     -> Wi,
    Unphysical    -> True,
    SelfConjugate -> True, 
    Indices       -> {Index[SU2W]},
    FlavorIndex   -> SU2W,
    Definitions   -> { Wi[mu_,1] -> (Wbar[mu]+W[mu])/Sqrt[2], Wi[mu_,2] -> (Wbar[mu]-W[mu])/(I*Sqrt[2]), Wi[mu_,3] -> cw Z[mu] + sw A[mu]}
  },

(* Ghosts: related to unphysical gauge bosons *)
  U[11] == {
    ClassName     -> ghB, 
    Unphysical    -> True,
    SelfConjugate -> False,
    Ghost         -> B, 
    Definitions   -> { ghB -> -sw ghZ + cw ghA}
  },
  U[12] == {
    ClassName     -> ghWi,
    Unphysical    -> True,
    SelfConjugate -> False,
    Ghost         -> Wi,
    Indices       -> {Index[SU2W]},
    FlavorIndex   -> SU2W,
    Definitions   -> { ghWi[1] -> (ghWp+ghWm)/Sqrt[2], ghWi[2] -> (ghWm-ghWp)/(I*Sqrt[2]), ghWi[3] -> cw ghZ+sw ghA}
  } ,

(* Fermions: physical fields *)
(* TODO: Add PMNS matrix *)
  F[1] == {
    ClassName        -> vl,
    ClassMembers     -> {ve,vm,vt},
    Indices          -> {Index[Generation]},
    FlavorIndex      -> Generation,
    SelfConjugate    -> False,
    Mass             -> 0,
    Width            -> 0,
    QuantumNumbers   -> {LeptonNumber -> 1},
    PropagatorLabel  -> {"v", "ve", "vm", "vt"} ,
    PropagatorType   -> S,
    PropagatorArrow  -> Forward,
    PDG              -> {12,14,16},
    ParticleName     -> {"ve","vm","vt"},
    AntiParticleName -> {"ve~","vm~","vt~"},
    FullName         -> {"Electron-neutrino", "Mu-neutrino", "Tau-neutrino"}
  },
  F[2] == {
    ClassName        -> l,
    ClassMembers     -> {e, mu, ta},
    Indices          -> {Index[Generation]},
    FlavorIndex      -> Generation,
    SelfConjugate    -> False,
    Mass             -> {Ml, {Me,5.11*^-4}, {MMU,0.10566}, {MTA,1.777}},
    Width            -> 0,
    QuantumNumbers   -> {Q -> -1, LeptonNumber -> 1},
    PropagatorLabel  -> {"l", "e", "mu", "ta"},
    PropagatorType   -> Straight,
    PropagatorArrow  -> Forward,
    PDG              -> {11, 13, 15},
    ParticleName     -> {"e-", "mu-", "ta-"},
    AntiParticleName -> {"e+", "mu+", "ta+"},
    FullName         -> {"Electron", "Muon", "Tau"} 
  },
(* TODO: Handle non-chiral limit for masses *)
  F[3] == {
    ClassName        -> Proton,
    SelfConjugate    -> False,
    Mass             -> {MNucleon, 0.938272},
    Width            -> 0,
    QuantumNumbers   -> {BaryonNumber -> 1, Q -> 1, Y -> 1},
    PropagatorLabel  -> {"p"},
    PropagatorType   -> S,
    PropagatorArrow  -> Forward,
    PDG              -> 2212,
    ParticleName     -> "p",
    AntiParticleName -> "p~",
    FullName         -> "Proton"
  },
  F[4] == {
    ClassName        -> Neutron,
    SelfConjugate    -> False,
    Mass             -> {MNucleon, 0.938272},
    Width            -> 0,
    QuantumNumbers   -> {BaryonNumber -> 1, Q -> 0, Y -> 1},
    PropagatorLabel  -> {"n"},
    PropagatorType   -> S,
    PropagatorArrow  -> Forward,
    PDG              -> 2112,
    ParticleName     -> "n",
    AntiParticleName -> "n~",
    FullName         -> "Neutron"
  },
  F[5] == {
    ClassName        -> Nucleon,
    Unphysical       -> True,
    SelfConjugate    -> False,
    Indices          -> {Index[IsoSpin]},
    FlavorIndex      -> IsoSpin,
    Definitions      -> { Nucleon[sp1_, 1] :> Proton[sp1], Nucleon[sp1_, 2] :> Neutron[sp1] }
  },
  (*
  F[4] == {
    ClassName        -> Delta,
    ClassMembers     -> {DeltaPP, DeltaP, Delta0},
    Indices          -> {Index[IsoSpin]},
    FlavorIndex      -> IsoSpin,
    SelfConjugate    -> False,
    Mass             -> {MDelta, 1232},
    Width            -> {WDelta, 0.12},
    PropagatorLabel  -> {"D", "D++", "D+", "D0"},
    PropagatorType   -> S,
    PropagatorArrow  -> Forward,
    PDG              -> {1232, 2214, 2114, 1114}, (*Error*)
    ParticleName     -> {"D++", "D+", "D0"},
    AntiParticleName -> {"D--", "D-", "D0"},
    FullName         -> {"Delta++", "Delta+", "Delta0"}
  },
  *)


(* Fermions: unphysical fields *)
  F[11] == { 
    ClassName      -> LL, 
    Unphysical     -> True, 
    Indices        -> {Index[SU2D], Index[Generation]},
    FlavorIndex    -> SU2D,
    SelfConjugate  -> False,
    QuantumNumbers -> {Y -> -1/2},
    Definitions    -> { LL[sp1_,1,ff_] :> Module[{sp2}, ProjM[sp1,sp2] vl[sp2,ff]], LL[sp1_,2,ff_] :> Module[{sp2}, ProjM[sp1,sp2] l[sp2,ff]] }
  },
  F[12] == { 
    ClassName      -> lR, 
    Unphysical     -> True, 
    Indices        -> {Index[Generation]},
    FlavorIndex    -> Generation,
    SelfConjugate  -> False,
    QuantumNumbers -> {Y -> -1},
    Definitions    -> { lR[sp1_,ff_] :> Module[{sp2}, ProjP[sp1,sp2] l[sp2,ff]] }
  },

(* Higgs: physical scalars  *)
  S[1] == {
    ClassName       -> H,
    SelfConjugate   -> True,
    Mass            -> {MH,125},
    Width           -> {WH,0.00407},
    PropagatorLabel -> "H",
    PropagatorType  -> D,
    PropagatorArrow -> None,
    PDG             -> 25,
    ParticleName    -> "H",
    FullName        -> "H"
  },

(* Higgs: physical scalars  *)
  S[2] == {
    ClassName       -> G0,
    SelfConjugate   -> True,
    Goldstone       -> Z,
    Mass            -> {MZ, 91.1876},
    Width           -> {WZ, 2.4952},
    PropagatorLabel -> "Go",
    PropagatorType  -> D,
    PropagatorArrow -> None,
    PDG             -> 250, (*Error*)
    ParticleName    -> "G0",
    FullName        -> "G0"
  },
  S[3] == {
    ClassName        -> GP,
    SelfConjugate    -> False,
    Goldstone        -> W,
    Mass             -> {MW, Internal},
    QuantumNumbers   -> {Q -> 1},
    Width            -> {WW, 2.085},
    PropagatorLabel  -> "GP",
    PropagatorType   -> D,
    PropagatorArrow  -> None,
    PDG              -> 251, (*Error*)
    ParticleName     -> "G+",
    AntiParticleName -> "G-",
    FullName         -> "GP"
  },

(* Higgs: unphysical scalars  *)
  S[11] == { 
    ClassName      -> Phi, 
    Unphysical     -> True, 
    Indices        -> {Index[SU2D]},
    FlavorIndex    -> SU2D,
    SelfConjugate  -> False,
    QuantumNumbers -> {Y -> 1/2},
    Definitions    -> { Phi[1] -> -I GP, Phi[2] -> (vev + H + I G0)/Sqrt[2]  }
  },

(* Pions *)
  S[4] == {
    ClassName        -> Pi0,
    SelfConjugate    -> True,
(* Assume Chiral symmetry *)
(*  Mass             -> {MPi0, 134.98}, *)
(*  Width            -> {WPi0, 0.0}, *)
    Mass             -> {MPi, 0.13498},
    Width            -> {WPi, 0.0},
    PropagatorLabel  -> "Pi0",
    PropagatorType   -> D,
    PropagatorArrow  -> None,
    PDG              -> 111,
    ParticleName     -> "Pi0",
    FullName         -> "Pi0"
  },
  S[5] == {
    ClassName        -> PiP,
    SelfConjugate    -> False,
(* Assume Chiral symmetry *)
(*  Mass             -> {MPiP, 139.57}, *)
(*  Width            -> {WPiP, 0.0}, *)
    Mass             -> {MPi, 0.13498},
    Width            -> {WPi, 0.0},
    QuantumNumbers   -> {Q -> 1},
    PropagatorLabel  -> "PiP",
    PropagatorType   -> D,
    PropagatorArrow  -> None,
    PDG              -> 211,
    ParticleName     -> "Pi+",
    AntiParticleName -> "Pi-",
    FullName         -> "Pi+"
  },
  S[6] == {
    ClassName        -> Pion,
    Unphysical       -> True,
    SelfConjugate    -> True,
    Indices          -> {Index[SU2W]},
    FlavorIndex      -> SU2W,
    Definitions      -> { Pion[1] -> (PiP+PiPbar)/Sqrt[2], Pion[2] -> (PiPbar-PiP)/(I*Sqrt[2]), Pion[3] -> Pi0}
  },
  S[7] == {
    ClassName        -> Eta,
    SelfConjugate    -> True,
    Mass             -> {MEta, 547.86},
    Width            -> {WEta, 0.0},
    PropagatorLabel  -> "Eta",
    PropagatorType   -> D,
    PropagatorArrow  -> None,
    PDG              -> 221,
    ParticleName     -> "Eta",
    FullName         -> "Eta"
  },
  S[8] == {
    ClassName        -> K0,
    SelfConjugate    -> False,
    Mass             -> {MK0, 497.61},
    Width            -> {WK0, 0.0},
    PropagatorLabel  -> "K0",
    PropagatorType   -> D,
    PropagatorArrow  -> None,
    PDG              -> 311,
    ParticleName     -> "K0",
    AntiParticleName -> "K0~",
    FullName         -> "K0"
  },
  S[9] == {
    ClassName        -> Kp,
    SelfConjugate    -> False,
    Mass             -> {MKp, 493.68},
    Width            -> {WKp, 0.0},
    QuantumNumbers   -> {Q -> 1},
    PropagatorLabel  -> "Kp",
    PropagatorType   -> D,
    PropagatorArrow  -> None,
    PDG              -> 321,
    ParticleName     -> "K+",
    AntiParticleName -> "K-",
    FullName         -> "K+"
  },

  R[1] == {
    ClassName        -> DeltaPP,
    SelfConjugate    -> False,
    Mass             -> {MDelta, 1.232},
    Width            -> {WDelta, 0.120},
    QuantumNumbers   -> {Q -> 2, BaryonNumber -> 1, Y -> 1},
    PropagatorLabel  -> "D++",
    PropagatorType   -> S,
    PropagatorArrow  -> Forward,
    PDG              -> 2224,
    ParticleName     -> "Delta++",
    AntiParticleName -> "Delta--Bar",
    FullName         -> "Delta++"
  },
  R[2] == {
    ClassName        -> DeltaP,
    SelfConjugate    -> False,
    Mass             -> {MDelta, 1.232},
    Width            -> {WDelta, 0.120},
    QuantumNumbers   -> {Q -> 1, BaryonNumber -> 1, Y -> 1},
    PropagatorLabel  -> "D+",
    PropagatorType   -> S,
    PropagatorArrow  -> Forward,
    PDG              -> 2214,
    ParticleName     -> "Delta+",
    AntiParticleName -> "Delta-Bar",
    FullName         -> "Delta+"
  },
  R[3] == {
    ClassName        -> Delta0,
    SelfConjugate    -> False,
    Mass             -> {MDelta, 1.232},
    Width            -> {WDelta, 0.120},
    QuantumNumbers   -> {Q -> 0, BaryonNumber -> 1, Y -> 1},
    PropagatorLabel  -> "D0",
    PropagatorType   -> S,
    PropagatorArrow  -> Forward,
    PDG              -> 2114, 
    ParticleName     -> "Delta0",
    AntiParticleName -> "Delta0Bar",
    FullName         -> "Delta0"
  },
  R[4] == {
    ClassName        -> DeltaM,
    SelfConjugate    -> False,
    Mass             -> {MDelta, 1.232},
    Width            -> {WDelta, 0.12},
    QuantumNumbers   -> {Q -> -1, BaryonNumber -> 1, Y -> 1},
    PropagatorLabel  -> "D-",
    PropagatorType   -> S,
    PropagatorArrow  -> Forward,
    PDG              -> 1114,
    ParticleName     -> "Delta-",
    AntiParticleName -> "Delta-bar",
    FullName         -> "Delta-"
  },
  R[5] == {
    ClassName        -> Delta,
    Unphysical       -> True,
    SelfConjugate    -> False,
    Indices          -> {Index[IsoSpin], Index[IsoVector]},
    FlavorIndex      -> IsoVector,
    Definitions      -> { Delta[sp_, mu_, 1, 1] -> (1/Sqrt[2])*((1/Sqrt[3])*Delta0[sp, mu]-DeltaPP[sp, mu]),
                          Delta[sp_, mu_, 2, 1] -> (1/Sqrt[2])*(-(1/Sqrt[3])*DeltaP[sp, mu] + DeltaM[sp, mu]),
                          Delta[sp_, mu_, 1, 2] -> (-I/Sqrt[2])*((1/Sqrt[3])*Delta0[sp, mu] + DeltaPP[sp, mu]),
                          Delta[sp_, mu_, 2, 2] -> (-I/Sqrt[2])*((1/Sqrt[3])*DeltaP[sp, mu] + DeltaM[sp, mu]),
                          Delta[sp_, mu_, 1, 3] -> Sqrt[2/3]*DeltaP[sp, mu],
                          Delta[sp_, mu_, 2, 3] -> Sqrt[2/3]*Delta0[sp, mu]}
  }(*,
  R[6] == {
    ClassName        -> barDelta,
    Unphysical       -> True,
    SelfConjugate    -> True,
    Indices          -> {Index[IsoSpin], Index[IsoVector]},
    FlavorIndex      -> IsoVector,
    Definitions      -> { barDelta[sp_, mu_, 1, 1] -> (1/Sqrt[2])*((1/Sqrt[3])*Delta0bar[sp, mu]-DeltaPPbar[sp, mu]),
                          barDelta[sp_, mu_, 2, 1] -> (1/Sqrt[2])*(-(1/Sqrt[3])*DeltaPbar[sp, mu] + DeltaMbar[sp, mu]),
                          barDelta[sp_, mu_, 1, 2] -> (I/Sqrt[2])*((1/Sqrt[3])*Delta0bar[sp, mu] + DeltaPPbar[sp, mu]),
                          barDelta[sp_, mu_, 2, 2] -> (I/Sqrt[2])*((1/Sqrt[3])*DeltaPbar[sp, mu] + DeltaMbar[sp, mu]),
                          barDelta[sp_, mu_, 1, 3] -> Sqrt[2/3]*DeltaPbar[sp, mu],
                          barDelta[sp_, mu_, 2, 3] -> Sqrt[2/3]*Delta0bar[sp, mu]}
  } Propably not required, same as Deltabar*)
};

(* *************************** *)
(* *****   FormFactors   ***** *)
(* *************************** *)

M$FormFactors = {
    FF1PA == {
        Particles -> {Protonbar, Proton, A},
        ComplexParameter -> False,
        Value -> "F1PA(-P(-1,3)**2)",
        ParameterName -> FF1PA
    },
    FF2PA == {
        Particles -> {Protonbar, Proton, A},
        ComplexParameter -> False,
        Value -> "F2PA(-P(-1,3)**2)",
        ParameterName -> FF2PA
    },
    FF1NA == {
      Particles -> {Neutronbar, Neutron, A},
      ComplexParameter -> True,
      Value -> "F1PN(-P(-1,3)**2)",
      ParameterName -> FF1PN
    },
    FF2NA == {
      Particles -> {Neutronbar, Neutron, A},
      ComplexParameter -> True,
      Value -> "F2NA(-P(-1,3)**2)",
      ParameterName -> FF2NA
    },
    FF1PZ == {
      Particles -> {Protonbar, Proton, Z},
      ComplexParameter -> True,
      Value -> "F1PZ(-P(-1,3)**2)",
      ParameterName -> FF1PZ
    },
    FF2PZ == {
      Particles -> {Protonbar, Proton, Z},
      ComplexParameter -> True,
      Value -> "F2PZ(-P(-1,3)**2)",
      ParameterName -> FF2PZ
    },
    FFAPZ == {
      Particles -> {Protonbar, Proton, Z},
      ComplexParameter -> True,
      Value -> "FAPZ(-P(-1,3)**2)",
      ParameterName -> FFAPZ
    },
    FF1NZ == {
      Particles -> {Neutronbar, Neutron, Z},
      ComplexParameter -> True,
      Value -> "F1NZ(-P(-1,3)**2)",
      ParameterName -> FF1NZ
    },
    FF2NZ == {
      Particles -> {Neutronbar, Neutron, Z},
      ComplexParameter -> True,
      Value -> "F2NZ(-P(-1,3)**2)",
      ParameterName -> FF2NZ
    },
    FFANZ == {
      Particles -> {Neutronbar, Neutron, Z},
      ComplexParameter -> True,
      Value -> "FANZ(-P(-1,3)**2)",
      ParameterName -> FFANZ
    },
    FF1PW == {
      Particles -> {Protonbar, Neutron, W},
      ComplexParameter -> True,
      Value -> "F1PW(-P(-1,3)**2)",
      ParameterName -> FF1PW
    },
    FF2PW == {
      Particles -> {Protonbar, Neutron, W},
      ComplexParameter -> True,
      Value -> "F2PW(-P(-1,3)**2)",
      ParameterName -> FF2PW
    },
    FFAPW == {
      Particles -> {Protonbar, Neutron, W},
      ComplexParameter -> True,
      Value -> "FAPW(-P(-1,3)**2)",
      ParameterName -> FFAPW
    },
    FFPPW == {
      Particles -> {Protonbar, Neutron, W},
      ComplexParameter -> True,
      Value -> "FPPW(-P(-1,3)**2)",
      ParameterName -> FFPPW
    },
    FF1NW == {
      Particles -> {Neutronbar, Proton, Wbar},
      ComplexParameter -> True,
      Value -> "F1NZ(-P(-1,3)**2)",
      ParameterName -> FF1NZ
    },
    FF2NW == {
      Particles -> {Neutronbar, Proton, Wbar},
      ComplexParameter -> True,
      Value -> "F2NW(-P(-1,3)**2)",
      ParameterName -> FF2NW
    },
    FFANW == {
      Particles -> {Neutronbar, Proton, Wbar},
      ComplexParameter -> True,
      Value -> "FANW(-P(-1,3)**2)",
      ParameterName -> FFANW
    },
    FFPPW == {
      Particles -> {Neutronbar, Proton, Wbar},
      ComplexParameter -> True,
      Value -> "FPNW(-P(-1,3)**2)",
      ParameterName -> FFPNW
    }
};


(* ************************** *)
(* *****     Gauge      ***** *)
(* *****   Parameters   ***** *)
(* *****   (FeynArts)   ***** *)
(* ************************** *)

GaugeXi[ V[1]  ] = GaugeXi[A];
GaugeXi[ V[2]  ] = GaugeXi[Z];
GaugeXi[ V[3]  ] = GaugeXi[W];
GaugeXi[ S[1]  ] = 1;
GaugeXi[ S[2]  ] = GaugeXi[Z];
GaugeXi[ S[3]  ] = GaugeXi[W];
GaugeXi[ U[1]  ] = GaugeXi[A];
GaugeXi[ U[2]  ] = GaugeXi[Z];
GaugeXi[ U[31] ] = GaugeXi[W];
GaugeXi[ U[32] ] = GaugeXi[W];


(* ************************** *)
(* *****   Parameters   ***** *)
(* ************************** *)
M$Parameters = {

  (* External parameters *)
  aEWM1 == { 
    ParameterType    -> External, 
    BlockName        -> SMINPUTS, 
    OrderBlock       -> 1, 
    Value            -> 127.9,
    InteractionOrder -> {QED,-2},
    Description      -> "Inverse of the EW coupling constant at the Z pole"
  },
  Gf == {
    ParameterType    -> External,
    BlockName        -> SMINPUTS,
    OrderBlock       -> 2,
    Value            -> 1.16637*^-5, 
    InteractionOrder -> {QED,2},
    TeX              -> Subscript[G,f],
    Description      -> "Fermi constant"
  },
  fPi == {
    ParameterType -> External,
    BlockName     -> SMINPUTS,
    OrderBlock    -> 3,
    Value         -> 0.093,
    Description   -> "Pion decay constant"
  },
  yme == {
    ParameterType -> External,
    BlockName     -> YUKAWA,
    OrderBlock    -> 11,
    Value         -> 5.11*^-4,
    Description   -> "Electron Yukawa mass"
  },
  ymm == {
    ParameterType -> External,
    BlockName     -> YUKAWA,
    OrderBlock    -> 13,
    Value         -> 0.10566,
    Description   -> "Muon Yukawa mass"
  },
  ymtau == {
    ParameterType -> External,
    BlockName     -> YUKAWA,
    OrderBlock    -> 15,
    Value         -> 1.777,
    Description   -> "Tau Yukawa mass"
  },
  cabi == {
    ParameterType -> External,
    BlockName     -> CKMBLOCK,
    OrderBlock    -> 1,
    Value         -> 0.227736,
    TeX           -> Subscript[\[Theta], c],
    Description   -> "Cabibbo angle"
  },

  (* Internal Parameters *)
  aEW == {
    ParameterType    -> Internal,
    Value            -> 1/aEWM1,
    InteractionOrder -> {QED,2},
    TeX              -> Subscript[\[Alpha], EW],
    Description      -> "Electroweak coupling contant"
  },
  MW == { 
    ParameterType -> Internal, 
    Value         -> Sqrt[MZ^2/2+Sqrt[MZ^4/4-Pi/Sqrt[2]*aEW/Gf*MZ^2]], 
    TeX           -> Subscript[M,W], 
    Description   -> "W mass"
  },
  sw2 == { 
    ParameterType -> Internal, 
    Value         -> 1-(MW/MZ)^2, 
    Description   -> "Squared Sin of the Weinberg angle"
  },
  ee == { 
    ParameterType    -> Internal, 
    Value            -> Sqrt[4 Pi aEW], 
    InteractionOrder -> {QED,1}, 
    TeX              -> e,  
    Description      -> "Electric coupling constant"
  },
  cw == { 
    ParameterType -> Internal, 
    Value         -> Sqrt[1-sw2], 
    TeX           -> Subscript[c,w], 
    Description   -> "Cosine of the Weinberg angle"
  },
  sw == { 
    ParameterType -> Internal, 
    Value         -> Sqrt[sw2], 
    TeX           -> Subscript[s,w], 
    Description   -> "Sine of the Weinberg angle"
  },
  g2 == { 
    ParameterType    -> Internal, 
    Definitions      -> {g2->ee/sw}, 
    InteractionOrder -> {QED,1},  
    TeX              -> Subscript[g,w], 
    Description      -> "Weak coupling constant at the Z pole"
  },
  g1 == { 
    ParameterType    -> Internal, 
    Definitions      -> {g1->ee/cw}, 
    InteractionOrder -> {QED,1},  
    TeX              -> Subscript[g,1], 
    Description      -> "U(1)Y coupling constant at the Z pole"
  },
  vev == {
    ParameterType    -> Internal,
    Value            -> 2*MW*sw/ee, 
    InteractionOrder -> {QED,-1},
    Description      -> "Higgs vacuum expectation value"
  },
  lam == {
    ParameterType    -> Internal,
    Value            -> MH^2/(2*vev^2),
    InteractionOrder -> {QED, 2},
    Description      -> "Higgs quartic coupling"
  },
  muH == {
    ParameterType -> Internal,
    Value         -> Sqrt[vev^2 lam],
    TeX           -> \[Mu],
    Description   -> "Coefficient of the quadratic piece of the Higgs potential"
  },
  yl == {
    ParameterType    -> Internal,
    Indices          -> {Index[Generation], Index[Generation]},
    Definitions      -> {yl[i_?NumericQ, j_?NumericQ] :> 0  /; (i =!= j)},
    Value            -> {yl[1,1] -> Sqrt[2] yme / vev, yl[2,2] -> Sqrt[2] ymm / vev, yl[3,3] -> Sqrt[2] ymtau / vev},
    InteractionOrder -> {QED, 1},
    ParameterName    -> {yl[1,1] -> ye, yl[2,2] -> ym, yl[3,3] -> ytau},
    TeX              -> Superscript[y, l],
    Description      -> "Lepton Yukawa couplings"
  },
(* N. B. : only Cabibbo mixing! *)
  CKM == { 
    ParameterType -> Internal,
    Indices       -> {Index[Generation], Index[Generation]},
    Unitary       -> True,
    Value         -> {CKM[1,1] -> Cos[cabi],  CKM[1,2] -> Sin[cabi], CKM[1,3] -> 0,
                      CKM[2,1] -> -Sin[cabi], CKM[2,2] -> Cos[cabi], CKM[2,3] -> 0,
                      CKM[3,1] -> 0,          CKM[3,2] -> 0,         CKM[3,3] -> 1},
    TeX         -> Superscript[V,CKM],
    Description -> "CKM-Matrix"
  }
};

(* ChiPT lagrangian ingridients *)

fPiOrder = 2;
UU := MatrixExp[ExpandIndices[Sum[I (PauliSigma[ii] Pion[ii])/fPi, {ii, 1, 3}]]];
uu := MatrixPower[UU, 1/2];

UMat := Simplify[Normal[Series[UU, {fPi, Infinity, fPiOrder}]]];
umat := Simplify[Normal[Series[uu, {fPi, Infinity, fPiOrder}]]];

LMat[mu_] := Module[{ii}, g2/2 ExpandIndices[Sum[PauliMatrix[ii] Wi[mu, ii], {ii, 1, 3}]] + g1/6 ExpandIndices[B[mu] * IdentityMatrix[2]]];
LMat[mu_] := Module[{ii}, g2/2 ExpandIndices[Sum[PauliMatrix[ii] Wi[mu, ii], {ii, 1, 3}]] + g1 ExpandIndices[B[mu] * IdentityMatrix[2]]];
LMat[mu_] := Module[{ii}, g2/2 ExpandIndices[Sum[PauliMatrix[ii] Wi[mu, ii], {ii, 1, 3}]] + g1/2 ExpandIndices[B[mu] * IdentityMatrix[2]]];

RMat[mu_] := Module[{ii}, g1/2 ExpandIndices[PauliMatrix[3]*B[mu]] + g1/6 ExpandIndices[IdentityMatrix[2] * B[mu]]];
RMat[mu_] := Module[{ii}, g1 ExpandIndices[PauliMatrix[3]*B[mu]] + g1 ExpandIndices[IdentityMatrix[2] * B[mu]]];
RMat[mu_] := Module[{ii}, g1/2 ExpandIndices[PauliMatrix[3]*B[mu]] + g1/2 ExpandIndices[IdentityMatrix[2] * B[mu]]];

(* DelU[mu_] := ExpandIndices[del[UMat, mu] - I RMat[mu].UMat + I UMat.LMat[mu]]; *)
DelU[mu_] := ExpandIndices[del[UMat, mu] - I LMat[mu].UMat + I UMat.RMat[mu]];
ChiMat := {{MPi^2, 0}, {0, MPi^2}};
MassU = ExpandIndices[ChiMat.HC[UMat] + UMat.HC[ChiMat]];
Commutator[mat_, mu_, nu_] := Module[{}, ExpandIndices[mat[mu].mat[nu] - mat[nu].mat[mu]]];
FSMat[mat_, mu_, nu_] := Module[{}, ExpandIndices[del[mat[nu], mu] - del[mat[mu], nu] - I Commutator[mat, mu, nu]]];

(* These are used across the code *)

getRidOfhigherOrderTerm[expression_] := 
  Normal[Series[expression, {fPi, Infinity, fPiOrder}]];
FeynmanGauge = False;
Nucleons[s_] = {Proton[s], Neutron[s]};
Nucleonsbar[s_] = {Protonbar[s], Neutronbar[s]};
$Assumptions = {\!\(
\*SubsuperscriptBox[\(c\), \(w\), \(2\)] + 
\*SubsuperscriptBox[\(s\), \(w\), \(2\)]\) == 1, gD > 0, g1D > 0, 
   G1 > 0, G2 > 0};
verticesTableStyle = {Proton -> "p", 
   Protonbar -> "\!\(\*OverscriptBox[\(p\), \(_\)]\)", Neutron -> "n",
    Neutronbar -> "\!\(\*OverscriptBox[\(n\), \(_\)]\)", 
   Pi0 -> "\!\(\*SuperscriptBox[\(\[Pi]\), \(0\)]\)", 
   PiP -> "\!\(\*SuperscriptBox[\(\[Pi]\), \(+\)]\)", 
   PiPbar -> "\!\(\*SuperscriptBox[\(\[Pi]\), \(-\)]\)", 
   DeltaM -> "\!\(\*SuperscriptBox[\(\[CapitalDelta]\), \(-\)]\)", 
   Delta0 -> "\!\(\*SuperscriptBox[\(\[CapitalDelta]\), \(0\)]\)", 
   DeltaP -> "\!\(\*SuperscriptBox[\(\[CapitalDelta]\), \(+\)]\)", 
   DeltaPP -> "\!\(\*SuperscriptBox[\(\[CapitalDelta]\), \(++\)]\)", 
   DeltaMbar -> 
    "\!\(\*OverscriptBox[SuperscriptBox[\(\[CapitalDelta]\), \(-\)], \
\(_\)]\)", 
   Delta0bar -> 
    "\!\(\*OverscriptBox[SuperscriptBox[\(\[CapitalDelta]\), \(0\)], \
\(_\)]\)", 
   DeltaPbar -> 
    "\!\(\*OverscriptBox[SuperscriptBox[\(\[CapitalDelta]\), \(+\)], \
\(_\)]\)", 
   DeltaPPbar -> 
    "\!\(\*OverscriptBox[SuperscriptBox[\(\[CapitalDelta]\), \(++\)], \
\(_\)]\)", 
   fPi -> Style["\!\(\*SubscriptBox[\(f\), \(\[Pi]\)]\)", Darker@Red],
    MPi -> Style["\!\(\*SubscriptBox[\(m\), \(\[Pi]\)]\)", 
     Darker@Green], W -> "\!\(\*SuperscriptBox[\(W\), \(+\)]\)", 
   Wbar -> "\!\(\*SuperscriptBox[\(W\), \(-\)]\)"};

(* pion-nucleon-gauge-boson interactions *)

aVec[mu_] = 
  I/2 (HC[umat] . del[umat, mu] - umat . del[HC[umat], mu]);
vVec[mu_] = 
  I/2 (HC[umat] . del[umat, mu] + umat . del[HC[umat], mu]);
LMatTilda[mu_] = Expand[HC[umat] . LMat[mu] . umat];
RMatTilda[mu_] = Expand[umat . RMat[mu] . HC[umat]];
Sigma[mu_, nu_, s1_, s2_] = 
  Block[{s3}, 
   I/2 (Ga[mu, s1, s3] . Ga[nu, s3, s2] - 
      Ga[nu, s1, s3] . Ga[mu, s3, s2])];
LPionKin = 
  Normal@Series[
    Block[{mu}, 
     ExpandIndices[
      1/4 fPi^2 Tr[DelU[mu] . HC[DelU[mu]] + MassU]]], {fPi, Infinity,
      fPiOrder}];
LNucleonKin = 
  I Block[{mu, s1, s2, s3}, 
     Inner[Dot, Nucleonsbar[s1], 
      Inner[Dot, Ga[mu, s1, s2] IdentityMatrix[2], 
       del[Nucleons[s2], mu]]]] - 
   MNucleon*Block[{s1}, Inner[Dot, Nucleonsbar[s1], Nucleons[s1]]];
LNNAxial = 
  Block[{mu, s1, s2, s3}, 
   Normal@Series[-ga Inner[Dot, Nucleonsbar[s1], 
       Inner[Dot, Ga[mu, s1, s2] IdentityMatrix[2], 
        Inner[Dot, aVec[mu] + 1/2 (LMatTilda[mu] - RMatTilda[mu]), 
         Inner[Dot, Ga[5, s2, s3] IdentityMatrix[2], 
          Nucleons[s3]]]]], {fPi, Infinity, fPiOrder}
     ]];
LNNVector = 
  Block[{mu, nu, s1, s2, s3}, 
   Normal@Series[
     Inner[Dot, Nucleonsbar[s1], 
      Inner[Dot, Ga[mu, s1, s2] IdentityMatrix[2], 
       Inner[Dot, vVec[mu] + 1/2 (LMatTilda[mu] + RMatTilda[mu]), 
        Nucleons[s2]]]
      ], {fPi, Infinity, fPiOrder}
     ]];

(* Delta baryons *)
AD = -1;
ztilde = (3 AD + 1)/2;
g2D = AD*g1D;
g3D = -((1 + 2 AD + 3 AD^2)/2)*g1D;
ChiConnect[
   mu_] = (1/2) (HC[umat] . (del[umat, mu] - I*RMat[mu] . umat) + 
       umat . (del[HC[umat], mu] - I*LMat[mu] . HC[umat])) // 
    ExpandIndices // getRidOfhigherOrderTerm;
ChiVielbein[mu_] = 
  I*(HC[umat] . (del[umat, mu] - I*RMat[mu] . umat) - 
       umat . (del[HC[umat], mu] - I*LMat[mu] . HC[umat])) // 
    ExpandIndices // getRidOfhigherOrderTerm;
ChiConnectV[mu_, l_] := (1/2) Tr[ChiConnect[mu] . PauliMatrix[l]] // 
   getRidOfhigherOrderTerm; 
ChiVielbein2[mu_, r1_, r2_] := ChiVielbein[mu][[r1, r2]];
ChiVielbeinV[mu_, l_] := (1/2) Tr[PauliSigma[l] . ChiVielbein[mu]] // 
   getRidOfhigherOrderTerm;
DeltaConnection[mu_, r1_, r2_, i1_, i2_] := Block[{k}, (
   Sum[-2 I Eps[i1, i2, k] ChiConnectV[mu, k] IndexDelta[r1, 
       r2], {k, 1, 3}] + IndexDelta[i1, i2] ChiConnect[mu][[r1, r2]]
   )]
DeltaCovariantDerivative[rho_, r1_, r2_, i1_, i2_, psi_] := 
 IndexDelta[i1, i2] IndexDelta[r1, r2] del[psi, rho] + 
  DeltaConnection[rho, r1, r2, i1, i2]*psi

(* Delta baryons interactions*)

RaritaDeltapi1 = -Block[{mu1, mu2, s1, s2, s3, i1, 
     i2, rho},
    
    Sum[Deltabar[s1, mu1, r1, 
         i1] ME[mu1, mu2] (I Ga[rho, s1, 
            s2] DeltaCovariantDerivative[rho, r1, r2, i1, i2, #] - 
          IndexDelta[s1, s2] IndexDelta[r1, r2] IndexDelta[i1, 
            i2] MDelta #) &@Delta[s2, mu2, r2, i2], {r1, 1, 
      2}, {r2, 1, 2}]
    
    ];
RaritaDeltapi2 = -Block[{mu1, mu2, s1, s2, s3, i1, 
     i2, rho},
    
    Sum[Deltabar[s1, mu1, r1, i1] I AD ( 
         Ga[mu1, s1, s2] DeltaCovariantDerivative[mu2, r1, r2, 
            i1, i2, #] + 
          Ga[mu2, s1, s2] DeltaCovariantDerivative[mu1, r1, r2, 
            i1, i2, #]) &@Delta[s2, mu2, r2, i2], {r1, 1, 2}, {r2, 
      1, 2}]
    
    ];
RaritaDeltapi3 = -Block[{mu1, mu2, s1, s2, s3, s4, 
     i1, i2, rho},
    
    Sum[Deltabar[s1, mu1, r1, i1] I/
        2 (3 AD^2 + 2 AD + 1) ( 
         Ga[mu1, s1, s2] Ga[rho, s2, s3] Ga[mu2, s3, 
           s4] DeltaCovariantDerivative[rho, r1, r2, i1, i2, #]) &@
      Delta[s4, mu2, r2, i2], {r1, 1, 2}, {r2, 1, 2}]
    
    ];
RaritaDeltapi4 = -Block[{mu1, mu2, s1, s2, s3, s4, 
     i1, i2, rho},
    
    Sum[Deltabar[s1, mu1, r1, i1] MDelta (3 AD^2 + 3 AD + 1) ( 
         Ga[mu1, s1, s2] Ga[mu2, s2, s3] #) &@
      Delta[s3, mu2, r2, i2], {r1, 1, 2}, {r2, 1, 2}]
    
    ];

RaritaDeltapi5 = -g1D/
   2 Block[{mu1, mu2, s1, s2, s3, i1, i2, rho}, 
    Sum[Deltabar[s1, mu1, r1, 
         i1] (Ga[rho, s1, s2] IndexDelta[i1, 
           i2] ChiVielbein2[rho, r1, r2] Ga[5, s2, 
           s3] ME[mu1, mu2] #) &@Delta[s3, mu2, r2, i2]
     , {r1, 1, 2}, {r2, 1, 2}]
    ];
RaritaDeltapi6 = -(g2D/2)
     Block[{mu1, mu2, s1, s2, s3, i1, i2, rho},
    
    Sum[Deltabar[s1, mu1, r1, 
         i1] (Ga[mu1, s1, s2] Ga[5, s2, s3] IndexDelta[i1, 
            i2] ChiVielbein2[mu2, r1, r2] # + 
          Ga[mu2, s1, s2] Ga[5, s2, s3] IndexDelta[i1, 
            i2] ChiVielbein2[mu1, r1, r2] #) &@
      Delta[s3, mu2, r2, i2]
     , {r1, 1, 2}, {r2, 1, 2}]
    ];
RaritaDeltapi7 = -(g3D/2)
     Block[{mu1, mu2, s1, s2, s3, s4, s5, i1, i2, rho},
    
    Sum[Deltabar[s1, mu1, r1, 
         i1] (Ga[mu1, s1, s2] Ga[rho, s2, s3] Ga[5, s3, 
           s4] Ga[mu2, s4, s5] IndexDelta[i1, 
           i2] ChiVielbein2[rho, r1, r2] #) &@
      Delta[s5, mu2, r2, i2]
     , {r1, 1, 2}, {r2, 1, 2}]
    ];
RaritaDeltapi = 
  RaritaDeltapi1 + RaritaDeltapi2 + 
   RaritaDeltapi3 + RaritaDeltapi4 + 
   RaritaDeltapi5 + RaritaDeltapi6 + 
   RaritaDeltapi7;

(* PhotoExcitation - PROBABLY WRONG *)

EMStrengthTensor[mu_, nu_] := 
 del[A[mu], nu] - del[A[nu], mu]
DualEMStrengthTensor[mu_, nu_] := 
 Block[{rho, sigma}, 
  1/2 Eps[mu, nu, rho, sigma] EMStrengthTensor[rho, sigma]]

RaritaGammaNDelta = kappa Block[{s1, s2, mu, nu},
   Protonbar[
      s1] (I G1 IndexDelta[s1, 
         s2] DualEMStrengthTensor[mu, nu] + 
       G2 Ga[5, s1, s2] EMStrengthTensor[mu, nu]) del[
      DeltaP[s2, nu], mu]
    + HC[
     Protonbar[
       s1] (I HC[G1] IndexDelta[s1, 
          s2] DualEMStrengthTensor[mu, nu] + 
        HC[G2] Ga[5, s1, s2] EMStrengthTensor[mu, nu]) del[
       DeltaP[s2, nu], mu]]
   ]

Ltotal = LNNAxial + LNNVector + RaritaDeltapi + RaritaGammaNDelta;

(* ************************** *)
(* *****   Lagrangian   ***** *)
(* ************************** *)

LGauge := Block[{mu,nu}, 
  -1/(2 g2^2) Tr[FSMat[WMat, mu, nu].FSMat[WMat, mu, nu]]
  -1/(2 g1^2) Tr[FSMat[BMat, mu, nu].FSMat[BMat, mu, nu]]];

LFermions := Block[{mu}, 
  ExpandIndices[I*(
    LLbar.Ga[mu].DC[LL, mu] + lRbar.Ga[mu].DC[lR, mu]), 
  FlavorExpand->{SU2W,SU2D}]];

LHiggs := Block[{ii,mu, feynmangaugerules},
  feynmangaugerules = If[Not[FeynmanGauge], {G0|GP|GPbar ->0}, {}];
 
  ExpandIndices[DC[Phibar[ii],mu] DC[Phi[ii],mu] + muH^2 Phibar[ii] Phi[ii] - lam Phibar[ii] Phi[ii] Phibar[jj] Phi[jj], FlavorExpand->{SU2D,SU2W}]/.feynmangaugerules
 ];

LYukawa := Block[{sp,ii,jj,cc,ff1,ff2,ff3,yuk,feynmangaugerules},
  feynmangaugerules = If[Not[FeynmanGauge], {G0|GP|GPbar ->0}, {}];
 
  yuk = ExpandIndices[
    -yl[ff1, ff3] LLbar[sp, ii, ff1].lR [sp, ff3] Phi[ii], FlavorExpand -> SU2D];
  yuk+HC[yuk]/.feynmangaugerules
 ];

LGhost := Block[{LGh1,LGhw,LGhs,LGhphi,mu, generators,gh,ghbar,Vectorize,phi1,phi2,togoldstones,doublet,doublet0},
  (* Pure gauge piece *) 	
  LGh1 = -ghBbar.del[DC[ghB,mu],mu];
  LGhw = -ghWibar[ii].del[DC[ghWi[ii],mu],mu];

  (* Scalar pieces: see Peskin pages 739-742 *)
  (* phi1 and phi2 are the real degrees of freedom of GP *)
  (* Vectorize transforms a doublet in a vector in the phi-basis, i.e. the basis of real degrees of freedom *)
  gh    = {ghB, ghWi[1], ghWi[2], ghWi[3]};
  ghbar = {ghBbar, ghWibar[1], ghWibar[2], ghWibar[3]};
  generators = {-I/2 g1 IdentityMatrix[2], -I/2 g2 PauliSigma[1], -I/2 g2 PauliSigma[2], -I/2 g2 PauliSigma[3]};
  doublet = Expand[{(-I phi1 - phi2)/Sqrt[2], Phi[2]} /. MR$Definitions /. vev -> 0]; 
  doublet0 = {0, vev/Sqrt[2]};
  Vectorize[{a_, b_}]:= Simplify[{Sqrt[2] Re[Expand[a]], Sqrt[2] Im[Expand[a]], Sqrt[2] Re[Expand[b]], Sqrt[2] Im[Expand[b]]}/.{Im[_]->0, Re[num_]->num}];
  togoldstones := {phi1 -> (GP + GPbar)/Sqrt[2], phi2 -> (-GP + GPbar)/(I Sqrt[2])};
  LGhphi=Plus@@Flatten[Table[-ghbar[[kkk]].gh[[lll]] Vectorize[generators[[kkk]].doublet0].Vectorize[generators[[lll]].(doublet+doublet0)],{kkk,4},{lll,4}]] /.togoldstones;

ExpandIndices[ If[FeynmanGauge, LGh1 + LGhw + LGhphi,0], FlavorExpand->SU2W]];

LSMnu:= LGauge + LFermions + LHiggs + LYukawa + LGhost + LPionKin;